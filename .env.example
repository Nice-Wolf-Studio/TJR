# ==============================================================================
# TJR Suite Environment Variables
# ==============================================================================
#
# SECURITY WARNING: This is an EXAMPLE file only!
# - Copy this file to .env and fill in your actual values
# - NEVER commit .env to version control (it's in .gitignore)
# - NEVER hardcode credentials in source code
# - Use environment-specific secrets for each deployment
# - Rotate secrets regularly according to the policies below
#
# For detailed security guidelines, see: docs/security/secrets.md
#
# ==============================================================================

# ==============================================================================
# Naming Conventions
# ==============================================================================
# All secret keys follow the pattern: PROVIDER_NAME_SECRET_TYPE
# - PROVIDER_NAME: Service or provider (e.g., ALPHAVANTAGE, DATABENTO, DISCORD)
# - SECRET_TYPE: Type of secret (e.g., API_KEY, TOKEN, PASSWORD)
# - Environment suffix: Add _DEV, _STAGE, _PROD for environment-specific secrets
#
# Examples:
# - ALPHAVANTAGE_API_KEY (single environment)
# - DISCORD_DEV_TOKEN (development-specific)
# - DATABASE_URL (connection string)
# ==============================================================================

# ==============================================================================
# Database Configuration
# ==============================================================================
# SECURITY: Contains credentials - NEVER commit actual connection strings
# ROTATION: Change password every 90 days
# FORMAT: <dialect>://<user>:<password>@<host>:<port>/<database>
#
# SQLite (local development/testing only - no secrets)
DATABASE_URL=sqlite:data/local.db

# PostgreSQL (staging/production)
# Format: postgresql://username:password@hostname:5432/database_name
# Example: postgresql://tjr_user:REPLACE_WITH_STRONG_PASSWORD@db.example.com:5432/tjr_prod
# DATABASE_URL=postgresql://username:REPLACE_WITH_PASSWORD@localhost:5432/database_name
#
# SECURITY NOTES:
# - Use strong passwords (16+ chars, mixed case, numbers, symbols)
# - Different passwords per environment
# - Use managed database credentials where possible (AWS RDS, etc.)
# - Enable SSL/TLS for all database connections in production
# ==============================================================================

# ==============================================================================
# Market Data Providers
# ==============================================================================

# -----------------------------------------------------------------------------
# AlphaVantage API
# -----------------------------------------------------------------------------
# SECURITY: Free tier API key - rotate if exposed
# ROTATION: Rotate immediately if compromised, otherwise every 180 days
# FORMAT: Alphanumeric string, typically 16 characters
# OBTAIN: https://www.alphavantage.co/support/#api-key
#
# Example format: ALPHAVANTAGE_API_KEY=A1B2C3D4E5F6G7H8
# ALPHAVANTAGE_API_KEY=REPLACE_WITH_YOUR_ALPHAVANTAGE_KEY

# -----------------------------------------------------------------------------
# Databento API
# -----------------------------------------------------------------------------
# SECURITY: Paid tier API key with rate limits - HIGH PRIORITY to protect
# ROTATION: Rotate every 90 days or immediately if compromised
# FORMAT: Alphanumeric string with hyphens, typically 32+ characters
# OBTAIN: https://databento.com/portal/keys
#
# Example format: DATABENTO_API_KEY=db-1234567890abcdef-1234567890abcdef
# DATABENTO_API_KEY=REPLACE_WITH_YOUR_DATABENTO_KEY

# ==============================================================================
# Discord Bot Configuration
# ==============================================================================
# SECURITY: Bot tokens grant full bot access - CRITICAL to protect
# ROTATION: Rotate every 90 days or immediately if compromised
# OBTAIN: https://discord.com/developers/applications
#
# Bot tokens:
# - Format: Base64-encoded string with dots (MTk4NjIyNDgzNDcxOTI1MjQ4.Cl2FMQ.ZnCjm1XVW7vRze4b7Cq4se7kKWs)
# - Length: 59-72 characters typically
# - NEVER share or commit these tokens
#
# Application IDs:
# - Format: Numeric snowflake ID (18-19 digits)
# - Example: 123456789012345678
# - These are public identifiers, not secrets
#
# Guild IDs:
# - Format: Numeric snowflake ID (18-19 digits)
# - Comma-separated list for multiple guilds
# - These are semi-public identifiers

# Development Environment
# Purpose: Testing and development bot instance
# DISCORD_DEV_TOKEN=MTk4NjIyNDgzNDcxOTI1MjQ4.REPLACE.WITH_YOUR_DEV_BOT_TOKEN
# DISCORD_DEV_APPLICATION_ID=123456789012345678
# DISCORD_DEV_GUILD_IDS=123456789012345678,234567890123456789

# Staging Environment
# Purpose: Pre-production testing with production-like configuration
# DISCORD_STAGE_TOKEN=MTk4NjIyNDgzNDcxOTI1MjQ4.REPLACE.WITH_YOUR_STAGE_BOT_TOKEN
# DISCORD_STAGE_APPLICATION_ID=234567890123456789
# DISCORD_STAGE_GUILD_IDS=345678901234567890

# Production Environment
# Purpose: Live production bot serving real users
# DISCORD_PROD_TOKEN=MTk4NjIyNDgzNDcxOTI1MjQ4.REPLACE.WITH_YOUR_PROD_BOT_TOKEN
# DISCORD_PROD_APPLICATION_ID=345678901234567890
# Note: Production uses global command registration, no guild IDs needed

# ==============================================================================
# Rotation Policy Summary
# ==============================================================================
# HIGH PRIORITY (rotate every 90 days):
# - DATABASE_URL (database credentials)
# - DATABENTO_API_KEY (paid tier, rate-limited)
# - DISCORD_*_TOKEN (full bot access)
#
# MEDIUM PRIORITY (rotate every 180 days):
# - ALPHAVANTAGE_API_KEY (free tier, public data)
#
# IMMEDIATE ROTATION REQUIRED IF:
# - Secret is accidentally committed to version control
# - Secret is exposed in logs or error messages
# - Secret is shared with unauthorized parties
# - Suspicious activity detected on the account
#
# See docs/security/secrets.md for detailed rotation procedures
# ==============================================================================

# ==============================================================================
# Local Development
# ==============================================================================
# For local development, you can use fixture data instead of real API keys:
# - Set PROVIDER_TYPE=fixture in packages/app/.env
# - This avoids needing API keys during development
# - Real keys only needed for integration testing and production
# ==============================================================================